module PagesCore
	module Assets
		class << self
			ASSETS_ROOT = File.join(RAILS_ROOT, 'app/assets')

			def compile_javascripts(options={})
				options = {
					:force => false
				}.merge(options)

				js_source = File.join(ASSETS_ROOT, 'javascripts')
				js_target = File.join(RAILS_ROOT, 'public/javascripts')

				scripts = []
				Find.find(js_source) do |path|
					if path =~ /\.(js|coffee)$/
						relative_path = path.gsub(Regexp.new("^#{Regexp.escape(js_source)}/?"),'')
						scripts << {
							:name   => relative_path,
							:source => path,
							:target => File.join(js_target, relative_path).gsub(/\.coffee$/, '.js')
						}
					end
				end
				
				scripts.each do |script|
					source_time = File.mtime(script[:source])
					target_time = File.mtime(script[:target]) rescue 0

					if options[:force] || !File.exists?(script[:target]) || source_time > target_time
						source = File.read(script[:source])
						if script[:name] =~ /\.coffee$/
							source = CoffeeScript.compile(source)
						end
						FileUtils.mkdir_p File.dirname(script[:target])
						File.open(script[:target], 'w') do |fh|
							fh.write "/* THIS FILE IS AUTOMATICALLY GENERATED */\n\n"
							fh.write source
						end
					end
				end
			end

			def compile_stylesheets(options={})
				options = {
					:force => false
				}.merge(options)

				css_source = File.join(ASSETS_ROOT, 'stylesheets')
				css_target = File.join(RAILS_ROOT, 'public/stylesheets')

				stylesheets = []
				Find.find(css_source) do |path|
					if path =~ /\.(css)$/
						relative_path = path.gsub(Regexp.new("^#{Regexp.escape(css_source)}/?"),'')
						stylesheets << {
							:name   => relative_path,
							:source => path,
							:target => File.join(css_target, relative_path)
						}
					end
				end
				
				stylesheets.each do |stylesheet|
					source_time = File.mtime(stylesheet[:source])
					target_time = File.mtime(stylesheet[:target]) rescue 0

					if options[:force] || !File.exists?(stylesheet[:target]) || source_time > target_time
						source = File.read(stylesheet[:source])
						FileUtils.mkdir_p File.dirname(stylesheet[:target])
						File.open(stylesheet[:target], 'w') do |fh|
							fh.write "/* THIS FILE IS AUTOMATICALLY GENERATED */\n\n"
							fh.write source
						end
					end
				end
			end

			def compile!(options={})
				compile_javascripts(options)
				compile_stylesheets(options)
			end
		end
	end
end