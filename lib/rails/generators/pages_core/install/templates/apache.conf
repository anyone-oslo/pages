<VirtualHost *:80>
  ServerName <%= @domain_name %>
  ServerAlias www.<%= @domain_name %> <%= @app_name %>.srv2.0102.no
  ServerAdmin support@manualdesign.no
  RackBaseURI /
  ErrorLog /var/log/apache2/<%= @domain_name %>-error.log
  LogLevel warn
  CustomLog /var/log/apache2/<%= @domain_name %>-access.log combined
  ServerSignature Off

  DocumentRoot /var/www/<%= @app_name %>/current/public
  <Directory "/var/www/<%= @app_name %>/current/public">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
    AddType 'application/rss+xml;charset=UTF-8' rss rss;schedule
  </Directory>

  AddDefaultCharset UTF-8

  RewriteEngine On

  # Redirect www.<%= @domain_name %> to <%= @domain_name %>
  RewriteCond %{HTTP_HOST} ^www\.<%= @domain_name.gsub(".", "\\.") %>$ [NC]
  RewriteRule ^(.*)$ http://<%= @domain_name %>$1 [R=301,L]

  # Check for maintenance file and redirect all requests
  #  ( this is for use with Capistrano's disable_web task )
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteRule ^.*$ /system/maintenance.html [L]

  # Rewrite index to check for static
  RewriteRule ^/$ /index.html [QSA]

  # Rewrite to check for Rails cached page
  RewriteRule ^([^.]+)$ $1.html [QSA]

  # Domain based page cache
  RewriteCond %{DOCUMENT_ROOT}/cache/%{HTTP_HOST}/%{REQUEST_FILENAME} -f
  RewriteRule ^/(.*)$ /cache/%{HTTP_HOST}/$1 [PT]

  # Page cache
  RewriteCond %{DOCUMENT_ROOT}/cache/%{REQUEST_FILENAME} -f
  RewriteRule ^/(.*)$ /cache/$1 [PT]
</VirtualHost>
